/* .: Q-WIND :. TEST like NIKE and Just --Q IT! */
/* (RE)MOVE --q and .: Q-WIND :. STOPS WORKING... */
:root {
    /* STRATEGY  |  CREATE */
    --q: ;
    --\_brand: #22face;
    --\/_brand: #22cafe;
    --\/\/_brand: #fa22ce;
    --\/\/\/_brand: #face22;

    --\_test: currentColor;
    --\/_test: red;
    --\/\/_test: limegreen;
    --\/\/\/_test: blue;
}

/*  __STRUCTURE  |  __READ */
.q__brand {
    --_q: var(--_brand, black);
    border-color: var(--_q);
    --q: var(var(--_q));
    accent-color: var(--q);
    --q-key-1: var(--\_brand);
    --q-key-2: var(--\/_brand);
    --q-key-3: var(--\/\/_brand);
    --q-key-4: var(--\/\/\/_brand);
    --q-key-5: var(--\_brand);
}
.q__test {
    --_q: var(--_test, red);
    border-color: var(--_q);
    --q: var(--_q);
    accent-color: var(--q);
    --q-key-1: var(--\_test);
    --q-key-2: var(--\/_test);
    --q-key-3: var(--\/\/_test);
    --q-key-4: var(--\/\/\/_test);
    --q-key-5: var(--\_test);
}

.q__default {
    --_q: currentColor, var(--q), rebeccapurple;
    border-color: var(--_q);
    --q: var(--_q);
}

/*  --SURFACE  |  --READ */
.q--txt, .q--text {
    color: var(--q);
}
.q--debug:not(div)::before,
.q--debug:is(div)::after {
    content: "Q:."attr(data-q);
    color: var(--\/_test);
    font-size: clamp(0.775em, 5vh, 15px);
    text-decoration: line-through;
    -webkit-text-decoration-color: black;
            text-decoration-color: black;
    z-index: 99;
    isolation: isolate;
}
.q--border {
    border-width: max-content;
    border-color: currentColor;
}
:where(.q--animate) {
    border-width: 1vmin !important;
    -o-border-image: conic-gradient(from var(--angle), var(--q-key-1), var(--q-key-1), var(--q-key-2), var(--q-key-2), var(--q-key-3), var(--q-key-3), var(--q-key-3), var(--q-key-4), var(--q-key-5), var(--q-key-5)) 1;
       border-image: conic-gradient(from var(--angle), var(--q-key-1), var(--q-key-1), var(--q-key-2), var(--q-key-2), var(--q-key-3), var(--q-key-3), var(--q-key-3), var(--q-key-4), var(--q-key-5), var(--q-key-5)) 1;
    -webkit-animation: 10s rotate linear infinite;
            animation: 10s rotate linear infinite;
}
.q--bg {
    background-color: var(--q);
    background: var(--q);
}
.q--fg {
    fill: var(--q);
    stroke: 0.5vmin solid var(--q);
}

/*  SKELETON  |  SHRINK  |  UPDATE */
:is(.q__test, .q--border):not(.q__brand) {
    border-color: currentColor;
    border-style: dashed;
}
:is(.q--border):not(.q__test) {
    border-color: currentColor;
    border-style: solid;
}
:is(.q--see-txt, .q--see-text):not(.q--less) {
    --_q: white;  
    color: var(--_q) !important;
    background-color: var(--q);
}

/*  SCOPE  |  HIDE  |  DELETE */
:is(.q--borderless) {
    border-width: 0px !important;
}
:is(.q--textless, .q--txtless) {
    color: transparent !important;
}
:where(.q--less) {
    --q: revert !important;
}

@-webkit-keyframes rotate {
    to {
        --angle: 360deg;
    }
}

@keyframes rotate {
    to {
        --angle: 360deg;
    }
}
/*  STRATEGY  |  EMBOSS  |  UPDATE */
@property --q {
    syntax: '<color>';
    initial-value: unset;
    inherits: true;
}

/* POWERED BY: https://bram.us/2021/01/29/animating-a-css-gradient-border */
@property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

/* Powered By: .: https://justgu.us :.  The tiniest "Dutch Design System" agency inside a human body. 
/* --Questions? .: https://askgu.us :. or .: https://followgu.us :. for more Guus! */  
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3Rlc3QuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlEQUFpRDtBQUNqRCxtREFBbUQ7QUFDbkQ7SUFDSSx3QkFBd0I7SUFDeEIsS0FBSztJQUNMLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLHVCQUF1Qjs7SUFFdkIsc0JBQXNCO0lBQ3RCLGNBQWM7SUFDZCxzQkFBc0I7SUFDdEIsbUJBQW1CO0FBQ3ZCOztBQUVBLDRCQUE0QjtBQUM1QjtJQUNJLDBCQUEwQjtJQUMxQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0Qix5QkFBeUI7SUFDekIsMEJBQTBCO0lBQzFCLDRCQUE0QjtJQUM1Qiw4QkFBOEI7SUFDOUIseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSx1QkFBdUI7SUFDdkIsdUJBQXVCO0lBQ3ZCLGNBQWM7SUFDZCxzQkFBc0I7SUFDdEIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QiwyQkFBMkI7SUFDM0IsNkJBQTZCO0lBQzdCLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLDJDQUEyQztJQUMzQyx1QkFBdUI7SUFDdkIsY0FBYztBQUNsQjs7QUFFQSwwQkFBMEI7QUFDMUI7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7O0lBRUksMEJBQTBCO0lBQzFCLHFCQUFxQjtJQUNyQixvQ0FBb0M7SUFDcEMsNkJBQTZCO0lBQzdCLG9DQUE0QjtZQUE1Qiw0QkFBNEI7SUFDNUIsV0FBVztJQUNYLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLDBCQUEwQjtBQUM5QjtBQUNBO0lBQ0ksOEJBQThCO0lBQzlCLG9OQUFpTjtPQUFqTixpTkFBaU47SUFDak4sNkNBQXFDO1lBQXJDLHFDQUFxQztBQUN6QztBQUNBO0lBQ0ksMEJBQTBCO0lBQzFCLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksY0FBYztJQUNkLDhCQUE4QjtBQUNsQzs7QUFFQSxvQ0FBb0M7QUFDcEM7SUFDSSwwQkFBMEI7SUFDMUIsb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSwwQkFBMEI7SUFDMUIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsMkJBQTJCO0lBQzNCLDBCQUEwQjtBQUM5Qjs7QUFFQSwrQkFBK0I7QUFDL0I7SUFDSSw0QkFBNEI7QUFDaEM7QUFDQTtJQUNJLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0k7UUFDSSxlQUFlO0lBQ25CO0FBQ0o7O0FBSkE7SUFDSTtRQUNJLGVBQWU7SUFDbkI7QUFDSjtBQUNBLG9DQUFvQztBQUNwQztJQUNJLGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIsY0FBYztBQUNsQjs7QUFFQSwyRUFBMkU7QUFDM0U7SUFDSSxpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGVBQWU7QUFDbkI7O0FBRUE7b0ZBQ29GIiwiZmlsZSI6InRlc3QuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogLjogUS1XSU5EIDouIFRFU1QgbGlrZSBOSUtFIGFuZCBKdXN0IC0tUSBJVCEgKi9cbi8qIChSRSlNT1ZFIC0tcSBhbmQgLjogUS1XSU5EIDouIFNUT1BTIFdPUktJTkcuLi4gKi9cbjpyb290IHtcbiAgICAvKiBTVFJBVEVHWSAgfCAgQ1JFQVRFICovXG4gICAgLS1xOiA7XG4gICAgLS1cXF9icmFuZDogIzIyZmFjZTtcbiAgICAtLVxcL19icmFuZDogIzIyY2FmZTtcbiAgICAtLVxcL1xcL19icmFuZDogI2ZhMjJjZTtcbiAgICAtLVxcL1xcL1xcL19icmFuZDogI2ZhY2UyMjtcblxuICAgIC0tXFxfdGVzdDogY3VycmVudENvbG9yO1xuICAgIC0tXFwvX3Rlc3Q6IHJlZDtcbiAgICAtLVxcL1xcL190ZXN0OiBsaW1lZ3JlZW47XG4gICAgLS1cXC9cXC9cXC9fdGVzdDogYmx1ZTtcbn1cblxuLyogIF9fU1RSVUNUVVJFICB8ICBfX1JFQUQgKi9cbi5xX19icmFuZCB7XG4gICAgLS1fcTogdmFyKC0tX2JyYW5kLCBibGFjayk7XG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1fcSk7XG4gICAgLS1xOiB2YXIodmFyKC0tX3EpKTtcbiAgICBhY2NlbnQtY29sb3I6IHZhcigtLXEpO1xuICAgIC0tcS1rZXktMTogdmFyKC0tXFxfYnJhbmQpO1xuICAgIC0tcS1rZXktMjogdmFyKC0tXFwvX2JyYW5kKTtcbiAgICAtLXEta2V5LTM6IHZhcigtLVxcL1xcL19icmFuZCk7XG4gICAgLS1xLWtleS00OiB2YXIoLS1cXC9cXC9cXC9fYnJhbmQpO1xuICAgIC0tcS1rZXktNTogdmFyKC0tXFxfYnJhbmQpO1xufVxuLnFfX3Rlc3Qge1xuICAgIC0tX3E6IHZhcigtLV90ZXN0LCByZWQpO1xuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tX3EpO1xuICAgIC0tcTogdmFyKC0tX3EpO1xuICAgIGFjY2VudC1jb2xvcjogdmFyKC0tcSk7XG4gICAgLS1xLWtleS0xOiB2YXIoLS1cXF90ZXN0KTtcbiAgICAtLXEta2V5LTI6IHZhcigtLVxcL190ZXN0KTtcbiAgICAtLXEta2V5LTM6IHZhcigtLVxcL1xcL190ZXN0KTtcbiAgICAtLXEta2V5LTQ6IHZhcigtLVxcL1xcL1xcL190ZXN0KTtcbiAgICAtLXEta2V5LTU6IHZhcigtLVxcX3Rlc3QpO1xufVxuXG4ucV9fZGVmYXVsdCB7XG4gICAgLS1fcTogY3VycmVudENvbG9yLCB2YXIoLS1xKSwgcmViZWNjYXB1cnBsZTtcbiAgICBib3JkZXItY29sb3I6IHZhcigtLV9xKTtcbiAgICAtLXE6IHZhcigtLV9xKTtcbn1cblxuLyogIC0tU1VSRkFDRSAgfCAgLS1SRUFEICovXG4ucS0tdHh0LCAucS0tdGV4dCB7XG4gICAgY29sb3I6IHZhcigtLXEpO1xufVxuLnEtLWRlYnVnOm5vdChkaXYpOjpiZWZvcmUsXG4ucS0tZGVidWc6aXMoZGl2KTo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiUTouXCJhdHRyKGRhdGEtcSk7XG4gICAgY29sb3I6IHZhcigtLVxcL190ZXN0KTtcbiAgICBmb250LXNpemU6IGNsYW1wKDAuNzc1ZW0sIDV2aCwgMTVweCk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiBibGFjaztcbiAgICB6LWluZGV4OiA5OTtcbiAgICBpc29sYXRpb246IGlzb2xhdGU7XG59XG4ucS0tYm9yZGVyIHtcbiAgICBib3JkZXItd2lkdGg6IG1heC1jb250ZW50O1xuICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xufVxuOndoZXJlKC5xLS1hbmltYXRlKSB7XG4gICAgYm9yZGVyLXdpZHRoOiAxdm1pbiAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1pbWFnZTogY29uaWMtZ3JhZGllbnQoZnJvbSB2YXIoLS1hbmdsZSksIHZhcigtLXEta2V5LTEpLCB2YXIoLS1xLWtleS0xKSwgdmFyKC0tcS1rZXktMiksIHZhcigtLXEta2V5LTIpLCB2YXIoLS1xLWtleS0zKSwgdmFyKC0tcS1rZXktMyksIHZhcigtLXEta2V5LTMpLCB2YXIoLS1xLWtleS00KSwgdmFyKC0tcS1rZXktNSksIHZhcigtLXEta2V5LTUpKSAxO1xuICAgIGFuaW1hdGlvbjogMTBzIHJvdGF0ZSBsaW5lYXIgaW5maW5pdGU7XG59XG4ucS0tYmcge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXEpO1xuICAgIGJhY2tncm91bmQ6IHZhcigtLXEpO1xufVxuLnEtLWZnIHtcbiAgICBmaWxsOiB2YXIoLS1xKTtcbiAgICBzdHJva2U6IDAuNXZtaW4gc29saWQgdmFyKC0tcSk7XG59XG5cbi8qICBTS0VMRVRPTiAgfCAgU0hSSU5LICB8ICBVUERBVEUgKi9cbjppcygucV9fdGVzdCwgLnEtLWJvcmRlcik6bm90KC5xX19icmFuZCkge1xuICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIGJvcmRlci1zdHlsZTogZGFzaGVkO1xufVxuOmlzKC5xLS1ib3JkZXIpOm5vdCgucV9fdGVzdCkge1xuICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG59XG46aXMoLnEtLXNlZS10eHQsIC5xLS1zZWUtdGV4dCk6bm90KC5xLS1sZXNzKSB7XG4gICAgLS1fcTogd2hpdGU7ICBcbiAgICBjb2xvcjogdmFyKC0tX3EpICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcSk7XG59XG5cbi8qICBTQ09QRSAgfCAgSElERSAgfCAgREVMRVRFICovXG46aXMoLnEtLWJvcmRlcmxlc3MpIHtcbiAgICBib3JkZXItd2lkdGg6IDBweCAhaW1wb3J0YW50O1xufVxuOmlzKC5xLS10ZXh0bGVzcywgLnEtLXR4dGxlc3MpIHtcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbn1cbjp3aGVyZSgucS0tbGVzcykge1xuICAgIC0tcTogcmV2ZXJ0ICFpbXBvcnRhbnQ7XG59XG5cbkBrZXlmcmFtZXMgcm90YXRlIHtcbiAgICB0byB7XG4gICAgICAgIC0tYW5nbGU6IDM2MGRlZztcbiAgICB9XG59XG4vKiAgU1RSQVRFR1kgIHwgIEVNQk9TUyAgfCAgVVBEQVRFICovXG5AcHJvcGVydHkgLS1xIHtcbiAgICBzeW50YXg6ICc8Y29sb3I+JztcbiAgICBpbml0aWFsLXZhbHVlOiB1bnNldDtcbiAgICBpbmhlcml0czogdHJ1ZTtcbn1cblxuLyogUE9XRVJFRCBCWTogaHR0cHM6Ly9icmFtLnVzLzIwMjEvMDEvMjkvYW5pbWF0aW5nLWEtY3NzLWdyYWRpZW50LWJvcmRlciAqL1xuQHByb3BlcnR5IC0tYW5nbGUge1xuICAgIHN5bnRheDogJzxhbmdsZT4nO1xuICAgIGluaXRpYWwtdmFsdWU6IDBkZWc7XG4gICAgaW5oZXJpdHM6IGZhbHNlO1xufVxuXG4vKiBQb3dlcmVkIEJ5OiAuOiBodHRwczovL2p1c3RndS51cyA6LiAgVGhlIHRpbmllc3QgXCJEdXRjaCBEZXNpZ24gU3lzdGVtXCIgYWdlbmN5IGluc2lkZSBhIGh1bWFuIGJvZHkuIFxuLyogLS1RdWVzdGlvbnM/IC46IGh0dHBzOi8vYXNrZ3UudXMgOi4gb3IgLjogaHR0cHM6Ly9mb2xsb3dndS51cyA6LiBmb3IgbW9yZSBHdXVzISAqLyAgIl19 */